[프로젝트 p 추가 방법]

<js>
// 프로젝트 섹션 애니메이션 시퀀스 (p1~p8)
projectTl
  .to('.sc-project .group-intro .sticky-intro', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p1', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p2', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p3', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p4', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p5', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p6', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p7', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p8', {
    bottom: '100%'
  });


<css>
추가로, CSS 파일에서도 z-index 설정을 p8까지 추가해야 합니다. 현재 CSS에는 p5까지만 설정되어 있으므로, 다음 CSS를 추가해주세요:
css/* Project Z-Index */
.sc-project .group-project .sticky-project .p1 {
  z-index: -1;
}

.sc-project .group-project .sticky-project .p2 {
  z-index: -2;
}

.sc-project .group-project .sticky-project .p3 {
  z-index: -3;
}

.sc-project .group-project .sticky-project .p4 {
  z-index: -4;
}

.sc-project .group-project .sticky-project .p5 {
  z-index: -5;
}

/* 추가 필요 */
.sc-project .group-project .sticky-project .p6 {
  z-index: -6;
}

.sc-project .group-project .sticky-project .p7 {
  z-index: -7;
}

.sc-project .group-project .sticky-project .p8 {
  z-index: -8;
}



<프로젝트 총 높이>
또한 HTML에서 .group-project의 높이가 500vh로 설정되어 있는데, 프로젝트가 8개로 늘어났으므로 이 값도 조정이 필요할 수 있습니다. CSS에서 다음을 수정하는 것을 고려해보세요:
css.sc-project .group-project {
  height: 800vh; /* 500vh에서 800vh로 증가 */
}
이렇게 하면 8개의 프로젝트가 스크롤에 따라 순차적으로 나타나는 애니메이션이 정상적으로 작동할 것입니다.



-> 높이 남을 거임


intro 섹션(150vh)이 먼저 올라감
p1~p7이 순차적으로 올라감
p8은 마지막에 화면에 남음

따라서 총 8번의 이동(intro + p1~p7)이 일어나므로:
css.sc-project .group-project {
  height: 700vh; /* 7개 프로젝트가 이동 × 100vh */
}
700vh로 설정해보세요. 그래도 맞지 않으면 다음을 확인해보세요:

intro 섹션 높이 확인:

css.sc-project .group-intro {
  height: 150vh; /* 이 값이 영향을 줄 수 있음 */
}

각 프로젝트의 실제 이동 거리가 100vh가 맞는지 확인:
브라우저 개발자 도구에서 스크롤하면서 각 섹션이 얼마나 이동하는지 확인해보세요.
다른 여백이나 패딩이 있는지 확인:

css.sc-project {
  /* 여기에 추가 여백이 있는지 확인 */
}



<여백 안 남는 p8개 js>
// Lenis 스크롤 초기화
const lenis = new Lenis();

// Lenis 스크롤 이벤트와 ScrollTrigger 연동
lenis.on('scroll', ScrollTrigger.update);

// GSAP ticker로 Lenis 애니메이션 프레임 업데이트
gsap.ticker.add(time => {
  lenis.raf(time * 1000);
});

// GSAP lag smoothing 비활성화
gsap.ticker.lagSmoothing(0);

// 윈도우 로드 시 body에 'loaded' 클래스 추가
$(window).on('load', function() {
  $('body').addClass('loaded');
});

// hover 이벤트로 cursor on/off
$('.header .group-top .logo a .name-wrap').on('mouseover', function() {
  $('.header .group-top .logo a').hover(function() {
    $(this).addClass('on');
  }, function() {
    $(this).removeClass('on');
  });
});

// 메뉴 버튼 클릭 이벤트
$('.header .group-top .btn-menu').click(function() {
  $('.header .group-mobile').toggleClass('on');
  $('body').toggleClass('hidden');
  $('.header .group-top .btn-menu').toggleClass('on');
  
  // Lenis 스크롤 정지/재개
  if ($('body').hasClass('hidden')) {
    lenis.stop();
  } else {
    lenis.start();
  }
});

// About 링크 클릭 이벤트
$('.gnb .gnb-list .gnb-item .link-about').click(function(e) {
  e.preventDefault();
  gsap.to(window, {
    duration: 2,
    scrollTo: {
      y: '#about'
    },
    ease: 'power3.out'
  });
});

// Contact 링크 클릭 이벤트  
$('.gnb .gnb-list .gnb-item .link-contact').click(function(e) {
  e.preventDefault();
  gsap.to(window, {
    duration: 2,
    scrollTo: {
      y: '#footer'
    },
    ease: 'power3.out'
  });
});

// 모바일 메뉴 About 링크 클릭
$('.header .group-mobile .gnb-list .gnb-item .link-about').click(function(e) {
  e.preventDefault();
  $('.header .group-mobile').removeClass('on');
  $('body').removeClass('hidden');
  $('.header .group-top .btn-menu').removeClass('on');
  lenis.start();
  
  gsap.to(window, {
    duration: 2,
    scrollTo: {
      y: '#about'
    },
    ease: 'power3.out'
  });
});

// 모바일 메뉴 Contact 링크 클릭
$('.header .group-mobile .gnb-list .gnb-item .link-contact').click(function(e) {
  e.preventDefault();
  $('.header .group-mobile').removeClass('on');
  $('body').removeClass('hidden');
  $('.header .group-top .btn-menu').removeClass('on');
  lenis.start();
  
  gsap.to(window, {
    duration: 2,
    scrollTo: {
      y: '#footer'
    },
    ease: 'power3.out'
  });
});

// 프로젝트 타임라인 애니메이션
projectTl = gsap.timeline({
  scrollTrigger: {
    trigger: '.group-project',
    start: '0% 0%',
    end: '100% 100%',
    scrub: 0
  },
  ease: 'none'
});

// 프로젝트 섹션 애니메이션 시퀀스 (p8은 화면에 남음)
projectTl
  .to('.sc-project .group-intro .sticky-intro', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p1', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p2', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p3', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p4', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p5', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p6', {
    bottom: '100%'
  })
  .to('.sc-project .group-project .sticky-project .p7', {
    bottom: '100%'
  });

// 프로젝트 커서 따라다니기
$('.sc-project').mousemove(function(e) {
  const $cursor = $('.project-cursor [data-target="cursor"]');
  gsap.to($cursor, {
    x: e.clientX + 'px',
    y: e.clientY + 'px',
    duration: 0.7,
    stagger: {
      each: 0.1
    }
  });
});

// 프로젝트 영역 마우스 enter/leave
$('.sc-project .group-project').mouseenter(function() {
  $('.project-cursor').addClass('on');
});

$('.sc-project .group-project').mouseleave(function() {
  $('.project-cursor').removeClass('on');
});

// about 섹션 단어 초기 설정
gsap.set('.sc-about .group-title .title-area .line .word', {
  opacity: 0
});

// 윈도우 리사이즈 이벤트
$(window).resize(function() {
  sizeChk();
});

// 초기 사이즈 체크
sizeChk();

// 사이즈 체크 함수
function sizeChk() {
  // name2 요소 너비 계산 및 CSS 변수 설정
  $('.sc-learn .group-bottom .learn-list .learn-item .name2').each(function() {
    setTimeout(() => {
      const width = $(this).width() + 40;
      const nameOffset = $(this).siblings('.name-box').offset().left;
      const nameBoxOffset = $(this).parent('.name-wrap').offset().left;
      const offset = nameBoxOffset - nameOffset;
      const minusWidth = width * -1;
      
      $(this).parent('.name-wrap').css('--name2-width', width + 'px');
      $(this).parent('.name-wrap').css('--name-offset', offset + 'px');
      $(this).parent('.name-wrap').css('--minus-width', minusWidth + 'px');
    }, 100);
  });

  // 헤더 높이 계산
  const headerHeight = $('.header .group-top').innerHeight();
  $('.header .group-mobile').css('--top', headerHeight + 'px');

  // About 섹션 ScrollTrigger
  ScrollTrigger.create({
    trigger: '.sc-about',
    start: '0% 50%',
    onEnter: function() {
      // 단어 애니메이션
      gsap.to('.sc-about .group-title .title-area .line .word', {
        opacity: 1,
        duration: 1,
        ease: 'power1.inOut',
        stagger: {
          each: 0.3
        }
      });
      
      // orbit 애니메이션
      setTimeout(() => {
        gsap.to('.sphere', {
          duration: 7,
          ease: 'none',
          repeat: -1,
          motionPath: {
            path: '#orbitPath',
            align: '#orbitPath',
            alignOrigin: [0.5, 0.5]
          }
        });
      }, 100);
    }
  });

  // 모바일 대응
  if ($(window).innerHeight() < 768) {
    ScrollTrigger.batch('.header .group-mobile', {
      start: '0% 70%',
      end: '100% 70%',
      onEnter: function(elements) {
        $(elements).addClass('on');
      },
      onLeaveBack: function(elements) {
        $(elements).removeClass('on');
      }
    });
  } else {
    $('.header .group-mobile').removeClass('on');
    $('.header .group-mobile').removeClass('on');
    $('.header .group-top .btn-menu').removeClass('on');
    $('body').removeClass('hidden');
    lenis.start();
  }
}

// ScrollTrigger batch 애니메이션
ScrollTrigger.batch('[data-batch]', {
  start: '0% 90%',
  onEnter: function(elements) {
    $(elements).addClass('on');
  }
});



=====================프로젝트 추가 가이드 (써보진 않음 써보면 검증 확인하기)========================

# 프로젝트 추가 가이드 📋

## 1. HTML 수정 (index.html)

### 프로젝트 구조 추가
```html
<!-- 기존 p8 다음에 추가 -->
<div class="project style1 p9">  <!-- 클래스명 p9로 변경 -->
  <div class="container">
    <a href="프로젝트URL" target="_blank">
      <video preload="auto" src="assets/videos/프로젝트명.mp4" poster="assets/images/프로젝트명-thumbnail.png" playsinline="" autoplay="" muted="" loop=""></video>
      <h2>
        <span>SELECTED</span><em>2025</em><span>PROJECTS</span>
      </h2>

      <div class="flex">
        <div class="number mobile">09 – 09</div>  <!-- 총 개수도 업데이트 -->
        <h3 class="headline">
          프로젝트명
          <span class="desc">기술스택 설명</span>
        </h3>
        <div class="view">View project</div>
      </div>
      
      <div class="line-tl"></div>
      <div class="line-tr"></div>
      <div class="line-bl"></div>
      <div class="line-br"></div>
      <div class="number current">09</div>  <!-- 현재 번호 -->
      <div class="number total">09</div>     <!-- 총 개수 -->
      <div class="text-wrap">
        SCROLL TO DISCOVER
      </div>
    </a>
  </div>
</div>
```

### 모든 프로젝트의 total 숫자 업데이트
```html
<!-- 모든 프로젝트에서 수정 필요 -->
<div class="number mobile">01 – 09</div>  <!-- 09로 변경 -->
<div class="number total">09</div>         <!-- 09로 변경 -->
```

## 2. CSS 수정 (style.css)

### z-index 추가
```css
/* Project Z-Index 섹션에 추가 */
.sc-project .group-project .sticky-project .p9 {
  z-index: -9;
}
/* 프로젝트 개수만큼 계속 추가... */
```

### 높이 조정
```css
.sc-project .group-project {
  height: 700vh;  /* 프로젝트 개수에 따라 조정 */
}
```

**높이 계산 공식:**
- 높이 = (전체 프로젝트 수 - 1) × 100vh
- 마지막 프로젝트는 화면에 남아있으므로 이동하지 않음

예시:
- 8개 프로젝트: 7개 이동 = 700vh
- 9개 프로젝트: 8개 이동 = 800vh
- 10개 프로젝트: 9개 이동 = 900vh

## 3. JavaScript 수정 (index.js)

### 애니메이션 타임라인에 추가
```javascript
// projectTl 부분에서 p7 다음에 추가
.to('.sc-project .group-project .sticky-project .p8', {
  bottom: '100%'
})
// 마지막 프로젝트는 추가하지 않음! (화면에 남아야 함)
```

**중요**: 마지막 프로젝트는 애니메이션에 추가하지 않습니다!

예시 (9개 프로젝트일 때):
```javascript
projectTl
  .to('.sc-project .group-intro .sticky-intro', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p1', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p2', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p3', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p4', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p5', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p6', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p7', { bottom: '100%' })
  .to('.sc-project .group-project .sticky-project .p8', { bottom: '100%' });
  // p9는 추가하지 않음!
```

## 4. 파일 준비

### 필요한 파일들
- `assets/videos/프로젝트명.mp4` - 프로젝트 비디오
- `assets/images/프로젝트명-thumbnail.png` - 비디오 썸네일

## 📝 체크리스트

프로젝트 추가 시 확인사항:

- [ ] HTML: 새 프로젝트 구조 추가 (클래스명 p숫자)
- [ ] HTML: 모든 프로젝트의 total 숫자 업데이트
- [ ] CSS: z-index 추가
- [ ] CSS: .group-project 높이 조정
- [ ] JS: 애니메이션 타임라인에 추가 (마지막 제외)
- [ ] 비디오 파일 준비
- [ ] 썸네일 이미지 준비

## 💡 팁

1. **프로젝트 삭제 시**: 위 과정을 역순으로 진행
2. **순서 변경 시**: HTML의 순서와 클래스명(p1, p2...)을 조정
3. **디버깅**: 
   - 스크롤이 너무 길다 → 높이 줄이기
   - 마지막 프로젝트가 사라진다 → JS에서 마지막 항목 제거 확인
   - 프로젝트가 겹친다 → z-index 확인